{"version":3,"sources":["CriteriaTable.js","Form.js","Grid.js","GridForm.js","topsis.js","ResultGrid.js","i18n.js","LinearStepper.js","helpers.js","App.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","draggingItem","background","CriteriaTable","props","t","useTranslation","classes","data_columns","name","attribute","onDragEnd","handleOnDragEnd","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","map","column","idx","TableCell","align","droppableId","provided","TableBody","ref","innerRef","droppableProps","rows","row","draggableId","criterionName","index","snapshot","draggableProps","dragHandleProps","className","isDragging","scope","type","weight","Button","variant","color","onClick","removeRow","placeholder","formControl","margin","spacing","minWidth","button","form","Form","initState","styles","useState","state","setState","handleChange","event","target","value","disabled","onSubmit","e","preventDefault","handleSubmit","Box","display","flexDirection","TextField","required","input","label","onChange","FormControl","InputLabel","id","Select","labelId","MenuItem","Grid","style","width","height","dataset","columns","pageSize","loading","SheetJSFileExtensions","x","join","GridForm","fields","forEach","d","files","handleFile","accept","htmlFor","topsis_predict","criteria","weights","c","_sum","v","reduce","a","acc","product_vector","i","Math","sqrt","pow","_column_sum","positive_ideal","negative_ideal","criterion","values","indexOf","min","max","push","positive_distances","valor","j","e_vector","d_","sort","reverse","ResultGrid","field","headerName","setLoading","setDataset","useEffect","_criteria","parseFloat","result","setTimeout","_idx","idx_ranking","ranking","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","whitelist","resources","translation","pt","en","debug","interpolation","escapeValue","root","marginRight","instructions","marginTop","marginBottom","LinearStepper","dataColumnName","sum","disabledForm","disableGrid","disableResults","activeStep","setActiveStep","steps","nextSum","parseInt","destination","source","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","mapRows","_row","length","handleGridSubmit","file","reader","FileReader","rABS","readAsBinaryString","onload","bstr","wb","XLSX","read","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","console","log","readAsArrayBuffer","handleRandomizeWeights","newCriteria","JSON","parse","stringify","N","randomNumbers","_","random","sumOfRandomNumbers","val","equalWeight","floor","remainder","roundedWeights","proportionalWeight","round","diff","abs","weightIndexToAdjust","nextIndex","filter","Stepper","Step","StepLabel","Typography","step","mt","mb","disable","toUpperCase","slice","getStepContent","prev","flexGrow","title","textAlign","App","AppBar","position","Toolbar","fallback","Container","maxWidth","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.3c31abbc.chunk.js","sourcesContent":["import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport {useTranslation} from 'react-i18next';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  draggingItem: {\n    background: 'rgb(235,235,235)',\n  },\n}));\n\nexport default function CriteriaTable(props) {\n    const { t } = useTranslation();\n    const classes = useStyles(); \n\n    const data_columns = [\n        {name: t('DATA_COLUMN_CRITERION'), attribute:'criterionName'},\n        {name: t('DATA_COLUMN_TYPE'), attribute:'type'},\n        {name: t('DATA_COLUMN_WEIGHT')+' (%)', attribute: 'weight'},\n        {name: t('BUTTONS_REMOVE')}\n    ];\n\n\n    return (\n      <DragDropContext onDragEnd={props.handleOnDragEnd}>\n        <TableContainer component={Paper} >\n          <Table  aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                  {data_columns.map((column,idx) => (\n                      idx === 0 ?\n                      <TableCell key={column.name}>{column.name}</TableCell>\n                      :\n                      <TableCell align=\"center\" key={column.name}>{column.name}</TableCell>\n                  ))}\n              </TableRow>\n            </TableHead>\n            <Droppable droppableId=\"criteria-list\">\n              {(provided) => (\n                <TableBody\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {props.rows.map((row, idx) => (\n                    <Draggable key={row.criterionName} draggableId={row.criterionName} index={idx}>\n                      {(provided, snapshot) => (\n                        <TableRow\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className={snapshot.isDragging ? classes.draggingItem : ''}\n                        >\n                          <TableCell component=\"th\" scope=\"row\">\n                          {row.criterionName}\n                          </TableCell>\n                        <TableCell align=\"center\">{row.type === 1 ? t('CRITERION_TYPE_COST'): t('CRITERION_TYPE_BENEFIT')}</TableCell>\n                        <TableCell align=\"center\">{row.weight}</TableCell>\n                        <TableCell align=\"center\"><Button variant=\"contained\" color=\"secondary\" onClick={()=> props.removeRow(idx)} > {t('BUTTONS_REMOVE')} </Button></TableCell>\n                        </TableRow>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </TableBody>\n              )}\n            </Droppable>\n          </Table>\n        </TableContainer>\n      </DragDropContext>\n    );\n  }","import TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(0 , 1),\n    minWidth: 150\n  },\n  button: {\n    margin: theme.spacing(1,0)\n  },\n  form : {\n    margin: theme.spacing(2,0),\n  }\n}));\n\nexport default function Form(props) {\n    const initState = {\n        criterionName: '',\n        weight: 0,\n        type: 1\n    };\n\n    const styles  = useStyles();\n    const [state, setState] = useState(initState);\n    const { t } = useTranslation();\n\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setState({...state,\n          [name]: value,\n        });\n    };\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        props.handleSubmit(state);\n        setState(initState);\n    }\n      \n    const {criterionName, weight, type} = state;\n  return (\n        <form disabled className={styles.form} onSubmit={submitForm}>\n            <Box display=\"flex\" flexDirection='row'>\n              <TextField  disabled={props.disabled} required name=\"criterionName\" \n              className={styles.input} label={t('DATA_COLUMN_CRITERION')} variant=\"filled\" \n              value={criterionName} onChange={handleChange} />\n              <FormControl disabled={props.disabled} required className={styles.formControl} variant=\"filled\">\n                <InputLabel id=\"label-type\">{t('DATA_COLUMN_TYPE')}</InputLabel>\n                <Select\n                  labelId=\"label-type\"\n                  name='type'\n                  value={type}\n                  onChange={handleChange}\n                >\n                  <MenuItem value={1}>{t('CRITERION_TYPE_COST')}</MenuItem>\n                  <MenuItem value={2}>{t('CRITERION_TYPE_BENEFIT')}</MenuItem>\n                </Select>\n              </FormControl>\n\n              <TextField disabled={props.disabled} required className={styles.input}\n                type=\"number\"  name=\"weight\" label={t('DATA_COLUMN_WEIGHT') + \" (%)\"} variant=\"filled\" \n                value={weight} onChange={handleChange} \n              />\n            </Box>\n\n            <Button disabled={props.disabled} className={styles.button} type=\"submit\"  variant=\"contained\" color=\"primary\"> {t('BUTTONS_ADD')} </Button>\n        </form>\n  );\n}\n","import { DataGrid } from '@material-ui/data-grid';\nexport default function Grid(props){\n    return (\n      <div style={{width: '100%', height:300}}>\n          <DataGrid \n          rows={props.dataset} \n          columns={props.columns} \n          pageSize={5} \n          loading={props.loading}/>\n      </div>);\n}","import TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { useTranslation  } from 'react-i18next';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(0 , 1),\n    minWidth: 150\n  },\n  input:{\n      minWidth:100,\n      margin: theme.spacing(0, 1)\n  },\n  button: {\n    margin: theme.spacing(1,1,1,0)\n  },\n  form : {\n    margin: theme.spacing(2,0),\n  }\n}));\n\nconst SheetJSFileExtensions = [\n  \"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \n  \"csv\", \"txt\", \"ods\", \"fods\",\n   \"uos\", \"sylk\", \"dif\", \"dbf\", \n   \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \n   \"html\", \"htm\"\n].map(x => '.' + x).join(\",\");\n\nexport default function GridForm(props) {\n    const initState = {\n        'name': '',\n    };\n\n    props.fields.forEach(d => {\n        initState[d]= '';\n    });\n\n    const styles  = useStyles();\n    const [state, setState] = useState(initState);\n    const  {t} = useTranslation();\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'file-input'){\n          const files = event.target.files;\n          if(files && files[0]) props.handleFile(files[0]);\n        }else {\n          setState({...state,\n            [name]: value,\n          });\n      }\n    };\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        props.handleSubmit(state);\n        setState(initState);\n    }\n\n  return (\n        <form className={styles.form} onSubmit={submitForm} >\n            <Box display=\"flex\" flexDirection='row'>\n              <TextField  disabled={props.disabled} required name=\"name\" \n               label={t('DATA_COLUMN_NAME')} variant=\"filled\" \n              value={state.name} onChange={handleChange} />\n            \n             {props.fields.map((d, idx) => (\n                  <TextField key={idx} disabled={props.disabled} required className={styles.input}\n                  type=\"number\"  name={d} label={d} variant=\"filled\" \n                  value={state[d]} onChange={handleChange} \n                />\n             ))}\n            </Box>\n\n            <Button disabled={props.disabled} className={styles.button} type=\"submit\" \n            variant=\"contained\" color=\"primary\"> {t('BUTTONS_ADD')} </Button>\n            <input\n                className={styles.input}\n                style={{ display: 'none' }}\n                type=\"file\"\n                id=\"raised-button-file\"\n                name=\"file-input\"\n                accept={SheetJSFileExtensions}\n                onChange={handleChange}\n                />\n              <label htmlFor=\"raised-button-file\">\n                <Button disabled={props.disabled}  variant=\"contained\" component=\"span\"\n                 color=\"secondary\" className={styles.button}>\n                   {t('BUTTONS_LOAD')}\n                </Button>\n              </label> \n        </form>\n  );\n}\n","export default function topsis_predict(dataset, criteria) {\n    const weights = criteria.map(c => c.weight);\n    const _sum  = v => v.reduce((a, acc) => acc + a);\n    const _column_sum = i => _sum(dataset.map(row => Math.pow(row[i], 2) ));\n    //normalize\n    const rating_vector = dataset.map(row => row.map((d, i) => d / Math.sqrt(_column_sum(i))));\n    //product matrices\n    const product_vector = rating_vector.map(row => row.map((value, i) => weights[i] * value));\n    const positive_ideal = [];\n    const negative_ideal = [];\n\n    for (const criterion of criteria) {\n        const values = product_vector.map(row => row[criteria.indexOf(criterion)]);\n        const min = Math.min(...values), max = Math.max(...values);\n        positive_ideal.push(criterion.type === 1 ? min : max);\n        negative_ideal.push(criterion.type === 1 ? max : min);\n    }\n\n    const positive_distances = product_vector.map(row => \n        Math.sqrt(_sum(row.map((valor, j) => \n                Math.pow(positive_ideal[j] - valor, 2)))));\n\n    const negative_distances  = product_vector.map(row => \n        Math.sqrt(_sum(row.map((valor, j) => \n                Math.pow(negative_ideal[j] - valor, 2)))));\n\n    const e_vector = negative_distances.map((d_, i) => d_ / (positive_distances[i] + d_ ));\n    return [...e_vector].sort().reverse().map(d => e_vector.indexOf(d));\n}","import Grid from \"./Grid\";\nimport { useState, useEffect } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport topsis_predict from \"./topsis\";\n\n\nexport default function ResultGrid(props) {\n    const {t} = useTranslation();\n    \n    const columns = [\n        {field:'ranking', headerName: '#', type:\"number\", width: 60},\n        {field:'name', headerName: t('DATA_COLUMN_NAME'), width: 160},\n    ];\n\n    const [loading, setLoading] = useState(true);\n    const [dataset, setDataset] = useState([]);\n\n    useEffect(()=>{\n        const _criteria = props.criteria.map(d => ({name: d.criterionName, type: d.type, weight: parseFloat(d.weight/100.0) }))\n        const _dataset = props.dataset.map(row => ([..._criteria.map(d => row[d.name]) ] ))\n        const result = topsis_predict(_dataset, _criteria);\n        setTimeout(() => {\n            setDataset(result.map((_idx, idx_ranking )=> ({\n                id: idx_ranking,\n                name: props.dataset[_idx].name,\n                ranking: idx_ranking+1}\n            )))\n            setLoading(false);\n        },1000);\n    },[props.criteria, props.dataset]);\n    \n    return (\n    <Grid\n    loading={loading}\n    dataset={dataset}\n    columns={columns}\n    />\n  );\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport {pt,en} from './locales';\nimport LanguageDetector from 'i18next-browser-languagedetector';\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'en',\n    whitelist:['en','pt'],\n    resources:{\n      'pt': {\n        translation: pt\n      },\n      'en':{\n        translation: en\n      }\n    },\n    debug: true,\n    interpolation: {\n      escapeValue: false,\n    }\n  });\n\nexport default i18n;","import Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport CriteriaTable from \"./CriteriaTable\";\nimport Form from \"./Form\";\nimport Grid from \"./Grid\";\nimport GridForm from \"./GridForm\";\nimport ResultGrid from './ResultGrid';\nimport { useTranslation,  } from 'react-i18next';\nimport { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport XLSX from 'xlsx';\nimport {criteriaToDataColumns} from './helpers';\n\n// Helper function to reorder list\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(6, 0, 3),\n    width: \"100%\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\n\nexport default function LinearStepper(props) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const dataColumnName = t('DATA_COLUMN_NAME');\n  const [state, setState] = useState({\n    criteria: [],\n    sum: 0,\n    disabledForm: false,\n    disableGrid: true,\n    disableResults: true,\n    dataset: [],\n    loading: false\n  });\n\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = ['INSERTCRITERIA','INSERTDATASET', 'SEERESULTS'];\n\n  \n  const handleSubmit = (row) => {\n    //check the weights\n    const nextSum = state.sum + parseInt(row.weight);\n    setState({\n      ...state,\n      criteria: [...state.criteria, { ...row, weight: parseInt(row.weight) }],\n      sum: nextSum,\n      disabledForm: nextSum >= 100,\n      disableGrid: false,\n    });\n  };\n\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const items = reorder(\n      state.criteria,\n      result.source.index,\n      result.destination.index\n    );\n\n    setState({\n      ...state,\n      criteria: items,\n    });\n  };\n\n  const mapRows = (row, idx) => {\n    let _row = {...row};\n    _row.name = _row[dataColumnName];\n    delete _row[dataColumnName];\n   return  {..._row, \n          name: _row.name, \n          id: idx + state.dataset.length }\n  };\n\n  const handleGridSubmit = (row) => {\n    setState({ ...state, dataset: [...state.dataset, {...row, id: state.dataset.length}], disableResults: false});\n  };\n\n  const handleFile = (file) => {\n    setState({...state, loading: true});\n\t\tconst reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n    reader.onload = (e) => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws, { header: 0 });\n      console.log(data.map(mapRows));\n       setState({...state, dataset: data.map(mapRows),\n          disableResults: false,\n          loading: false\n        });\n    };\n    if (rABS) reader.readAsBinaryString(file);\n    else reader.readAsArrayBuffer(file);\n  }\n\n  const handleRandomizeWeights = () => {\n    if (state.criteria.length === 0) {\n      return;\n    }\n\n    // Deep copy criteria\n    const newCriteria = JSON.parse(JSON.stringify(state.criteria));\n\n    // Generate N random numbers with order-based bias\n    const N = newCriteria.length;\n    const randomNumbers = newCriteria.map((_, i) => (Math.random() * (N - i)) + 0.0001);\n\n    // Calculate sum of random numbers\n    let sumOfRandomNumbers = randomNumbers.reduce((acc, val) => acc + val, 0);\n\n    // Handle edge case where sum is 0\n    if (sumOfRandomNumbers === 0) {\n      // Assign equal weights if sum is 0\n      const equalWeight = Math.floor(100 / newCriteria.length);\n      let remainder = 100 % newCriteria.length;\n      newCriteria.forEach((criterion, index) => {\n        criterion.weight = equalWeight + (remainder > 0 ? 1 : 0);\n        if (remainder > 0) {\n          remainder--;\n        }\n      });\n      setState({\n        ...state,\n        criteria: newCriteria,\n        sum: 100,\n        disabledForm: true,\n      });\n      return;\n    }\n\n    // Calculate proportional weights and round them\n    let roundedWeights = newCriteria.map((criterion, index) => {\n      const proportionalWeight = (randomNumbers[index] / sumOfRandomNumbers) * 100;\n      return Math.round(proportionalWeight);\n    });\n\n    // Calculate sum of rounded weights\n    let currentSumRounded = roundedWeights.reduce((acc, val) => acc + val, 0);\n\n    // Calculate difference\n    let diff = 100 - currentSumRounded;\n\n    // Distribute the difference\n    // Add or subtract difference from weights one by one\n    // This simple distribution might not be perfectly even but works for most cases\n    for (let i = 0; i < Math.abs(diff); i++) {\n      const weightIndexToAdjust = i % roundedWeights.length;\n      if (diff > 0) {\n        roundedWeights[weightIndexToAdjust]++;\n      } else {\n        // Ensure weight doesn't go below 0, though unlikely with positive random numbers\n        if (roundedWeights[weightIndexToAdjust] > 0) {\n          roundedWeights[weightIndexToAdjust]--;\n        } else {\n          // If a weight is already 0 and we need to decrease, try the next one\n          // This could be improved by finding a non-zero weight to decrement\n           for(let j = 0; j < roundedWeights.length; j++) {\n             const nextIndex = (weightIndexToAdjust + j + 1) % roundedWeights.length;\n             if (roundedWeights[nextIndex] > 0) {\n                roundedWeights[nextIndex]--;\n                break;\n             }\n           }\n        }\n      }\n    }\n    \n    // Update the weight property of each criterion\n    newCriteria.forEach((criterion, index) => {\n      criterion.weight = roundedWeights[index];\n    });\n\n    // Update state\n    setState({\n      ...state,\n      criteria: newCriteria,\n      sum: 100, // Sum is now 100\n      disabledForm: true, // Form should be disabled as sum is 100\n      disableGrid: false, // Enable grid as criteria are now set with weights\n    });\n  };\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <Box>\n            <CriteriaTable \n                rows={state.criteria} \n                removeRow={removeRow} \n                handleOnDragEnd={handleOnDragEnd} \n            />\n            <Box mt={2} mb={2}> {/* Added Box for spacing */}\n              <Button\n                variant=\"outlined\" // Added variant for better appearance\n                color=\"secondary\" // Added color for distinction\n                className={classes.button}\n                onClick={handleRandomizeWeights} // Connected the function\n                disabled={state.criteria.length === 0}\n              >\n                Randomize Weights\n              </Button>\n            </Box>\n            <Form disabled={state.disabledForm} handleSubmit={handleSubmit} />\n          </Box>\n        );\n      case 1:\n        return (\n          <Box>\n            <Grid\n              dataset={state.dataset}\n              disable={state.disableGrid}\n              columns={criteriaToDataColumns(state.criteria)}\n              loading={state.loading}\n            />\n            <GridForm\n              fields={state.criteria.map(d => d.criterionName)}\n              disabled={state.disableGrid}\n              handleSubmit={handleGridSubmit}\n              handleFile={handleFile}\n            />\n          </Box>\n        );\n      case 2:\n        return (\n          <Box>\n           <ResultGrid\n            dataset={state.dataset}\n            disable={state.disableResults}\n            criteria={state.criteria}\n           />\n          </Box>\n      );\n      default:\n        return <Typography>{t('UNKNOWN_STEP')}</Typography>;\n    }\n  }\n\n  const handleNext = () => {\n    setActiveStep((prev) => prev + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prev) => prev - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const removeRow = (idx) => {\n    const nextSum = state.sum - parseInt(state.criteria[idx].weight);\n    setState({\n      ...state,\n      criteria: [...state.criteria.filter((d, i) => i !== idx)],\n      sum: nextSum,\n      disabledForm: nextSum >= 100,\n      disableGrid: nextSum === 0,\n    });\n  };\n\n  return (\n    <Box className={classes.root}>\n      <Stepper activeStep={activeStep}>\n       {steps.map((label, idx) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{t(label)}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {activeStep === steps.length ? (\n        <div>\n          <Typography className={classes.instructions}>\n            {t('ALL_STEPS_COMPLETED')}\n          </Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </div>\n      ) : (\n        <div>\n          <div>{getStepContent(activeStep)}</div>\n          <div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.button}\n            >\n              {t('BUTTON_BACK')}\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleNext}\n              disabled={(activeStep === 0 && state.disableGrid )|| (activeStep === 1 && state.disableResults)}\n              className={classes.button}\n            >\n              {activeStep === steps.length - 1 ? t('BUTTON_FINISH') : t('BUTTON_NEXT')}\n            </Button>\n          </div>\n        </div>\n      )}\n    </Box>\n  );\n}\n","import i18n from './i18n';\nexport function criteriaToDataColumns (criteria){\n    return [{field: 'name', headerName: i18n.t('DATA_COLUMN_NAME'), width: 200},\n    ...criteria.map((d) => ({\n    field: d.criterionName,\n    headerName: [...d.criterionName[0].toUpperCase(), d.criterionName.slice(1)],\n    type: \"number\",\n    width: 160 \n  }))]\n}","import Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography  from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport LinearStepper from './LinearStepper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Suspense} from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  title :{\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n}));\n\nfunction App() {\n  const classes  = useStyles();\n  const {t } = useTranslation();\n  return (\n   <Box className={classes.root}>\n      <AppBar position=\"static\">\n      <Toolbar >\n        <Suspense fallback='loading...'>\n        <Typography variant=\"h6\" className={classes.title} component=\"h1\">\n          {t('TITLE')}\n        </Typography>\n        </Suspense>\n      </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"md\">\n        <LinearStepper />\n      </Container>\n   </Box>\n  );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2364AA',\n    },\n    secondary: {\n      main: '#3DA5D9',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline  from '@material-ui/core/CssBaseline';\nimport {Suspense} from 'react';\nimport App from './App';\nimport theme from './theme';\nimport './i18n';\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Suspense fallback={null}>\n        <App />\n    </Suspense>\n  </ThemeProvider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}